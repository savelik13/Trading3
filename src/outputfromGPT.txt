/*
PROJECT STRUCTURE:

- public/
  - index.html
- src/
  - App.js
  - MarketGrader.js
  - MarketNews.js
  - index.js
  - App.css
- package.json
*/

// src/index.js
import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App";
import "./App.css";

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(<App />);


// src/App.js
import React from "react";
import { BrowserRouter as Router, Routes, Route, Link } from "react-router-dom";
import MarketGrader from "./MarketGrader";
import MarketNews from "./MarketNews";

function App() {
  return (
    <Router>
      <div style={{ padding: "1rem", background: "#333", color: "#fff" }}>
        <Link to="/" style={{ marginRight: "1rem", color: "#fff" }}>📊 Grader</Link>
        <Link to="/news" style={{ color: "#fff" }}>📰 Market News</Link>
      </div>
      <Routes>
        <Route path="/" element={<MarketGrader />} />
        <Route path="/news" element={<MarketNews />} />
      </Routes>
    </Router>
  );
}

export default App;


// src/MarketGrader.js
import React, { useState } from "react";

const CRITERIA = [
  { label: "SPY current position", key: "spy", weight: 0.1 },
  { label: "QQQ current position", key: "qqq", weight: 0.1 },
  { label: "IWM current position", key: "iwm", weight: 0.1 },
  { label: "High-Quality Setups", key: "highQuality", weight: 0.15 },
  { label: "Low-Quality Setups", key: "lowQuality", weight: 0.05 },
  { label: "Distance from Moving Averages", key: "maDistance", weight: 0.1 },
  { label: "Breakouts Follow-Through (Last 5 Days)", key: "breakouts", weight: 0.15 },
  { label: "Setup Visibility (Are they screaming?)", key: "screaming", weight: 0.15 },
];

function MarketGrader() {
  const [inputs, setInputs] = useState({});
  const [score, setScore] = useState(null);

  const handleChange = (key, value) => {
    setInputs({ ...inputs, [key]: Number(value) });
  };

  const calculateScore = () => {
    let total = 0;
    CRITERIA.forEach((item) => {
      const value = inputs[item.key] || 0;
      total += value * item.weight * 10;
    });
    setScore(Math.round(total));
  };

  const label =
    score >= 80
      ? "🌟 Excellent Swing Trading Conditions"
      : score >= 60
      ? "⚠️ Mixed or Cautious Environment"
      : "🚫 Poor Conditions – Be Careful";

  return (
    <div style={{ maxWidth: 600, margin: "0 auto", padding: "2rem" }}>
      <h1>📈 Swing Trading Market Grader</h1>
      {CRITERIA.map((item) => (
        <div key={item.key} style={{ marginBottom: "1rem" }}>
          <label>{item.label}</label>
          <input
            type="number"
            min="1"
            max="10"
            value={inputs[item.key] || ""}
            onChange={(e) => handleChange(item.key, e.target.value)}
            style={{ width: "100%", padding: "0.5rem" }}
          />
        </div>
      ))}
      <button onClick={calculateScore} style={{ padding: "1rem", fontWeight: "bold", marginTop: "1rem" }}>
        Calculate Score
      </button>
      {score !== null && (
        <div style={{ marginTop: "2rem", padding: "1rem", background: "#f0f0f0", borderRadius: "10px" }}>
          <h2>Total Score: {score} / 100</h2>
          <p>{label}</p>
        </div>
      )}
    </div>
  );
}

export default MarketGrader;


// src/MarketNews.js
import React, { useEffect, useState } from "react";

const API_KEY = "YOUR_OPENAI_API_KEY"; // Replace with your real key before deploying

function MarketNews() {
  const [news, setNews] = useState([]);
  const [lastFetched, setLastFetched] = useState(null);

  const fetchNews = async () => {
    try {
      const response = await fetch("https://api.openai.com/v1/chat/completions", {
        method: "POST",
        headers: {
          "Authorization": `Bearer ${API_KEY}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          model: "gpt-3.5-turbo",
          messages: [
            {
              role: "user",
              content: "What were the most important news (Stock market related) that happened in the last 24 hours?",
            },
          ],
          temperature: 0.7,
        }),
      });

      const data = await response.json();
      const reply = data.choices?.[0]?.message?.content || "No response";
      setNews((prev) => [reply, ...prev]);
      setLastFetched(new Date().toLocaleString());
    } catch (err) {
      setNews(["Error fetching news."]);
    }
  };

  useEffect(() => {
    fetchNews();
    const interval = setInterval(fetchNews, 60 * 60 * 1000);
    return () => clearInterval(interval);
  }, []);

  return (
    <div style={{ maxWidth: 700, margin: "auto", padding: "2rem" }}>
      <h2>📰 Market News (Last 24 Hours)</h2>
      <p><strong>Last updated:</strong> {lastFetched}</p>
      <ul>
        {news.map((item, index) => (
          <li key={index} style={{ marginBottom: "1rem", background: "#f1f1f1", padding: "1rem", borderRadius: "8px" }}>
            {item}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default MarketNews;


// src/App.css
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen';
  background-color: #fafafa;
}

input[type="number"] {
  border: 1px solid #ccc;
  border-radius: 5px;
}

button {
  background-color: #007bff;
  border: none;
  color: white;
  cursor: pointer;
  border-radius: 5px;
}

button:hover {
  background-color: #0056b3;
}
